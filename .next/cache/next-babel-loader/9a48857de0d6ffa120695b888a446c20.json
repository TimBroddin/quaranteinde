{"ast":null,"code":"var _jsxFileName = \"/Users/timbroddin/Sites/quaranteinde/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport Router from \"next/router\";\nimport Countdown from \"react-countdown\";\nimport Confetti from \"react-confetti\";\n\nconst createRenderer = lang => {\n  return ({\n    days,\n    hours,\n    minutes,\n    seconds,\n    completed\n  }) => {\n    if (completed) {\n      // Render a completed state\n      return __jsx(Confetti, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 14\n        }\n      });\n    } else {\n      // Render a countdown\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }\n      }, hours, \":\", minutes, \":\", seconds);\n    }\n  };\n};\n\nconst Index = ({\n  language\n}) => {\n  useEffect(() => {}); //return <Countdown date={new Date(2020, 3, 20)} renderer={renderer} />;\n\n  return __jsx(Countdown, {\n    date: Date.now() + 5000,\n    renderer: createRenderer(language),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  });\n};\n\nIndex.getInitialProps = async ({\n  res,\n  req\n}) => {\n  if (req && res) {\n    console.log(req.headers.host);\n\n    if (req.headers.host.indexOf(\"finquarantaine.be\") !== 1) {\n      return {\n        language: \"fr\"\n      };\n    } else {\n      return {\n        language: \"nl\"\n      };\n    }\n  } else {\n    return {\n      language: \"nl\"\n    };\n  }\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/timbroddin/Sites/quaranteinde/pages/index.js"],"names":["React","useEffect","Router","Countdown","Confetti","createRenderer","lang","days","hours","minutes","seconds","completed","Index","language","Date","now","getInitialProps","res","req","console","log","headers","host","indexOf"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,MAAMC,cAAc,GAAGC,IAAI,IAAI;AAC7B,SAAO,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA,OAAxB;AAAiCC,IAAAA;AAAjC,GAAD,KAAkD;AACvD,QAAIA,SAAJ,EAAe;AACb;AACA,aAAO,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAHD,MAGO;AACL;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,KADH,OACWC,OADX,OACqBC,OADrB,CADF;AAKD;AACF,GAZD;AAaD,CAdD;;AAgBA,MAAME,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9BZ,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,CAAT,CAD8B,CAG9B;;AACA,SACE,MAAC,SAAD;AAAW,IAAA,IAAI,EAAEa,IAAI,CAACC,GAAL,KAAa,IAA9B;AAAoC,IAAA,QAAQ,EAAEV,cAAc,CAACQ,QAAD,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD,CAPD;;AASAD,KAAK,CAACI,eAAN,GAAwB,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAP,KAAwB;AAC9C,MAAIA,GAAG,IAAID,GAAX,EAAgB;AACdE,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAJ,CAAYC,IAAxB;;AACA,QAAIJ,GAAG,CAACG,OAAJ,CAAYC,IAAZ,CAAiBC,OAAjB,CAAyB,mBAAzB,MAAkD,CAAtD,EAAyD;AACvD,aAAO;AACLV,QAAAA,QAAQ,EAAE;AADL,OAAP;AAGD,KAJD,MAIO;AACL,aAAO;AACLA,QAAAA,QAAQ,EAAE;AADL,OAAP;AAGD;AACF,GAXD,MAWO;AACL,WAAO;AAAEA,MAAAA,QAAQ,EAAE;AAAZ,KAAP;AACD;AACF,CAfD;;AAiBA,eAAeD,KAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport Router from \"next/router\";\nimport Countdown from \"react-countdown\";\nimport Confetti from \"react-confetti\";\n\nconst createRenderer = lang => {\n  return ({ days, hours, minutes, seconds, completed }) => {\n    if (completed) {\n      // Render a completed state\n      return <Confetti />;\n    } else {\n      // Render a countdown\n      return (\n        <span>\n          {hours}:{minutes}:{seconds}\n        </span>\n      );\n    }\n  };\n};\n\nconst Index = ({ language }) => {\n  useEffect(() => {});\n\n  //return <Countdown date={new Date(2020, 3, 20)} renderer={renderer} />;\n  return (\n    <Countdown date={Date.now() + 5000} renderer={createRenderer(language)} />\n  );\n};\n\nIndex.getInitialProps = async ({ res, req }) => {\n  if (req && res) {\n    console.log(req.headers.host);\n    if (req.headers.host.indexOf(\"finquarantaine.be\") !== 1) {\n      return {\n        language: \"fr\"\n      };\n    } else {\n      return {\n        language: \"nl\"\n      };\n    }\n  } else {\n    return { language: \"nl\" };\n  }\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}