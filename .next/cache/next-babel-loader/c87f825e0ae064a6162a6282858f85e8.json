{"ast":null,"code":"var _jsxFileName = \"/Users/timbroddin/Sites/quaranteinde/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport Router from \"next/router\";\nimport Countdown from \"react-countdown\";\nimport Confetti from \"react-confetti\";\n\nconst renderer = ({\n  days,\n  hours,\n  minutes,\n  seconds,\n  completed\n}) => {\n  if (completed) {\n    // Render a completed state\n    return __jsx(Confetti, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 12\n      }\n    });\n  } else {\n    // Render a countdown\n    return __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, hours, \":\", minutes, \":\", seconds);\n  }\n};\n\nIndex.getInitialProps = async ({\n  res,\n  req\n}) => {\n  console.log(\"initial\");\n};\n\nconst Index = ({\n  language\n}) => {\n  useEffect(() => {}); //return <Countdown date={new Date(2020, 3, 20)} renderer={renderer} />;\n\n  return __jsx(Countdown, {\n    date: Date.now() + 5000,\n    renderer: renderer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/timbroddin/Sites/quaranteinde/pages/index.js"],"names":["React","useEffect","Router","Countdown","Confetti","renderer","days","hours","minutes","seconds","completed","Index","getInitialProps","res","req","console","log","language","Date","now"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,OAAf;AAAwBC,EAAAA,OAAxB;AAAiCC,EAAAA;AAAjC,CAAD,KAAkD;AACjE,MAAIA,SAAJ,EAAe;AACb;AACA,WAAO,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAHD,MAGO;AACL;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,KADH,OACWC,OADX,OACqBC,OADrB,CADF;AAKD;AACF,CAZD;;AAcAE,KAAK,CAACC,eAAN,GAAwB,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAP,KAAwB;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,CAFD;;AAIA,MAAML,KAAK,GAAG,CAAC;AAAEM,EAAAA;AAAF,CAAD,KAAkB;AAC9BhB,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,CAAT,CAD8B,CAG9B;;AACA,SAAO,MAAC,SAAD;AAAW,IAAA,IAAI,EAAEiB,IAAI,CAACC,GAAL,KAAa,IAA9B;AAAoC,IAAA,QAAQ,EAAEd,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CALD;;AAOA,eAAeM,KAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport Router from \"next/router\";\nimport Countdown from \"react-countdown\";\nimport Confetti from \"react-confetti\";\n\nconst renderer = ({ days, hours, minutes, seconds, completed }) => {\n  if (completed) {\n    // Render a completed state\n    return <Confetti />;\n  } else {\n    // Render a countdown\n    return (\n      <span>\n        {hours}:{minutes}:{seconds}\n      </span>\n    );\n  }\n};\n\nIndex.getInitialProps = async ({ res, req }) => {\n  console.log(\"initial\");\n};\n\nconst Index = ({ language }) => {\n  useEffect(() => {});\n\n  //return <Countdown date={new Date(2020, 3, 20)} renderer={renderer} />;\n  return <Countdown date={Date.now() + 5000} renderer={renderer} />;\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}