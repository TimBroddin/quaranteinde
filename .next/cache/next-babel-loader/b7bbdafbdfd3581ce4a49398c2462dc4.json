{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/timbroddin/Sites/quaranteinde/pages/index.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport Router from \"next/router\";\nimport Countdown from \"react-countdown\";\nimport Confetti from \"react-confetti\";\nimport Head from \"next/head\";\n\nvar createRenderer = function createRenderer(lang) {\n  return function (_ref) {\n    var days = _ref.days,\n        hours = _ref.hours,\n        minutes = _ref.minutes,\n        seconds = _ref.seconds,\n        completed = _ref.completed;\n\n    if (completed) {\n      // Render a completed state\n      return __jsx(Confetti, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 14\n        }\n      });\n    } else {\n      // Render a countdown\n      return __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }, hours, \":\", minutes, \":\", seconds);\n    }\n  };\n};\n\nvar Index = function Index(_ref2) {\n  var language = _ref2.language;\n  console.log(language); //return <Countdown date={new Date(2020, 3, 20)} renderer={renderer} />;\n\n  return __jsx(Countdown, {\n    date: Date.now() + 5000,\n    renderer: createRenderer(language),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  });\n};\n\nIndex.getInitialProps = function _callee(_ref3) {\n  var res, req;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          res = _ref3.res, req = _ref3.req;\n\n          if (!(req && res)) {\n            _context.next = 10;\n            break;\n          }\n\n          console.log(req.headers.host);\n\n          if (!(req.headers.host.indexOf(\"finquarantaine.be\") !== -1)) {\n            _context.next = 7;\n            break;\n          }\n\n          return _context.abrupt(\"return\", {\n            language: \"fr\"\n          });\n\n        case 7:\n          return _context.abrupt(\"return\", {\n            language: \"nl\"\n          });\n\n        case 8:\n          _context.next = 11;\n          break;\n\n        case 10:\n          return _context.abrupt(\"return\", {\n            language: \"nl\"\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/timbroddin/Sites/quaranteinde/pages/index.js"],"names":["React","useEffect","Router","Countdown","Confetti","Head","createRenderer","lang","days","hours","minutes","seconds","completed","Index","language","console","log","Date","now","getInitialProps","res","req","headers","host","indexOf"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,IAAI,EAAI;AAC7B,SAAO,gBAAkD;AAAA,QAA/CC,IAA+C,QAA/CA,IAA+C;AAAA,QAAzCC,KAAyC,QAAzCA,KAAyC;AAAA,QAAlCC,OAAkC,QAAlCA,OAAkC;AAAA,QAAzBC,OAAyB,QAAzBA,OAAyB;AAAA,QAAhBC,SAAgB,QAAhBA,SAAgB;;AACvD,QAAIA,SAAJ,EAAe;AACb;AACA,aAAO,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAHD,MAGO;AACL;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,KADH,OACWC,OADX,OACqBC,OADrB,CADF;AAKD;AACF,GAZD;AAaD,CAdD;;AAgBA,IAAME,KAAK,GAAG,SAARA,KAAQ,QAAkB;AAAA,MAAfC,QAAe,SAAfA,QAAe;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAD8B,CAE9B;;AACA,SACE,MAAC,SAAD;AAAW,IAAA,IAAI,EAAEG,IAAI,CAACC,GAAL,KAAa,IAA9B;AAAoC,IAAA,QAAQ,EAAEZ,cAAc,CAACQ,QAAD,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD,CAND;;AAQAD,KAAK,CAACM,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,GAAT,SAASA,GAAT,EAAcC,GAAd,SAAcA,GAAd;;AAAA,gBAClBA,GAAG,IAAID,GADW;AAAA;AAAA;AAAA;;AAEpBL,UAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACC,OAAJ,CAAYC,IAAxB;;AAFoB,gBAGhBF,GAAG,CAACC,OAAJ,CAAYC,IAAZ,CAAiBC,OAAjB,CAAyB,mBAAzB,MAAkD,CAAC,CAHnC;AAAA;AAAA;AAAA;;AAAA,2CAIX;AACLV,YAAAA,QAAQ,EAAE;AADL,WAJW;;AAAA;AAAA,2CAQX;AACLA,YAAAA,QAAQ,EAAE;AADL,WARW;;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAab;AAAEA,YAAAA,QAAQ,EAAE;AAAZ,WAba;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAiBA,eAAeD,KAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport Router from \"next/router\";\nimport Countdown from \"react-countdown\";\nimport Confetti from \"react-confetti\";\nimport Head from \"next/head\";\n\nconst createRenderer = lang => {\n  return ({ days, hours, minutes, seconds, completed }) => {\n    if (completed) {\n      // Render a completed state\n      return <Confetti />;\n    } else {\n      // Render a countdown\n      return (\n        <span>\n          {hours}:{minutes}:{seconds}\n        </span>\n      );\n    }\n  };\n};\n\nconst Index = ({ language }) => {\n  console.log(language);\n  //return <Countdown date={new Date(2020, 3, 20)} renderer={renderer} />;\n  return (\n    <Countdown date={Date.now() + 5000} renderer={createRenderer(language)} />\n  );\n};\n\nIndex.getInitialProps = async ({ res, req }) => {\n  if (req && res) {\n    console.log(req.headers.host);\n    if (req.headers.host.indexOf(\"finquarantaine.be\") !== -1) {\n      return {\n        language: \"fr\"\n      };\n    } else {\n      return {\n        language: \"nl\"\n      };\n    }\n  } else {\n    return { language: \"nl\" };\n  }\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}