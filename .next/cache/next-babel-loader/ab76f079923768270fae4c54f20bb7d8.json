{"ast":null,"code":"var _jsxFileName = \"/Users/timbroddin/Sites/quaranteinde/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport Router from \"next/router\";\nimport Countdown from \"react-countdown\";\nimport Confetti from \"react-confetti\";\nimport Head from \"next/head\";\nimport { strings } from \"../strings\";\n\nconst getString = (str, lang) => {\n  return strings[str][lang];\n};\n\nconst createRenderer = lang => {\n  return ({\n    days,\n    hours,\n    minutes,\n    seconds,\n    completed\n  }) => {\n    if (completed) {\n      // Render a completed state\n      return __jsx(Confetti, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 14\n        }\n      });\n    } else {\n      // Render a countdown\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, __jsx(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }, days), \" \", getString(days === 1 ? \"day\" : \"days\", lang), \", \", __jsx(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, hours), \" getString(hours === 1 ? \\\"hour\\\" : \\\"hours\\\", lang)}, \", __jsx(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 19\n        }\n      }, minutes), \" \", getString(minutes === 1 ? \"minute\" : \"minutes\", lang), \",\", \" \", __jsx(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }, seconds), \" \", getString(seconds === 1 ? \"second\" : \"seconds\", lang), \".\");\n    }\n  };\n};\n\nconst Index = ({\n  language\n}) => {\n  console.log(language); //return <Countdown date={new Date(2020, 3, 20)} renderer={renderer} />;\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, getString(\"title\", language))), __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(Countdown, {\n    date: Date.now() + 5000,\n    renderer: createRenderer(language),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })));\n};\n\nIndex.getInitialProps = async ({\n  res,\n  req\n}) => {\n  if (req && res) {\n    console.log(req.headers.host);\n\n    if (req.headers.host.indexOf(\"finquarantaine.be\") !== -1) {\n      return {\n        language: \"fr\"\n      };\n    } else {\n      return {\n        language: \"nl\"\n      };\n    }\n  } else {\n    return {\n      language: \"nl\"\n    };\n  }\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/timbroddin/Sites/quaranteinde/pages/index.js"],"names":["React","useEffect","Router","Countdown","Confetti","Head","strings","getString","str","lang","createRenderer","days","hours","minutes","seconds","completed","Index","language","console","log","Date","now","getInitialProps","res","req","headers","host","indexOf"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport Router from \"next/router\";\nimport Countdown from \"react-countdown\";\nimport Confetti from \"react-confetti\";\nimport Head from \"next/head\";\nimport { strings } from \"../strings\";\n\nconst getString = (str, lang) => {\n  return strings[str][lang];\n};\n\nconst createRenderer = lang => {\n  return ({ days, hours, minutes, seconds, completed }) => {\n    if (completed) {\n      // Render a completed state\n      return <Confetti />;\n    } else {\n      // Render a countdown\n      return (\n        <span>\n          <strong>{days}</strong> {getString(days === 1 ? \"day\" : \"days\", lang)}\n          , <strong>{hours}</strong> getString(hours === 1 ? \"hour\" : \"hours\",\n          lang)}, <strong>{minutes}</strong>{\" \"}\n          {getString(minutes === 1 ? \"minute\" : \"minutes\", lang)},{\" \"}\n          <strong>{seconds}</strong>{\" \"}\n          {getString(seconds === 1 ? \"second\" : \"seconds\", lang)}.\n        </span>\n      );\n    }\n  };\n};\n\nconst Index = ({ language }) => {\n  console.log(language);\n  //return <Countdown date={new Date(2020, 3, 20)} renderer={renderer} />;\n  return (\n    <>\n      <Head>\n        <title>{getString(\"title\", language)}</title>\n      </Head>\n      <div className=\"container\">\n        <Countdown\n          date={Date.now() + 5000}\n          renderer={createRenderer(language)}\n        />\n      </div>\n    </>\n  );\n};\n\nIndex.getInitialProps = async ({ res, req }) => {\n  if (req && res) {\n    console.log(req.headers.host);\n    if (req.headers.host.indexOf(\"finquarantaine.be\") !== -1) {\n      return {\n        language: \"fr\"\n      };\n    } else {\n      return {\n        language: \"nl\"\n      };\n    }\n  } else {\n    return { language: \"nl\" };\n  }\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}